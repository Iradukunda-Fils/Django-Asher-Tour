# Generated by Django 5.1.3 on 2025-05-09 22:55

import django.core.validators
import django_countries.fields
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='RW', unique=True)),
                ('country', django_countries.fields.CountryField(default='RW', max_length=2)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_customer', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-date_joined'],
                'indexes': [models.Index(fields=['is_staff', 'active'], name='idx_is_staff_active'), models.Index(fields=['is_admin', 'active'], name='idx_is_admin_active'), models.Index(fields=['is_customer', 'country'], name='idx_is_customer_country'), models.Index(fields=['-date_joined'], name='idx_date_joined_desc')],
                'constraints': [models.UniqueConstraint(fields=('email',), name='unique_email_constraint'), models.UniqueConstraint(fields=('phone',), name='unique_phone_constraint'), models.UniqueConstraint(fields=('email', 'phone'), name='unique_email_phone'), models.CheckConstraint(condition=models.Q(('active', True), models.Q(('is_staff', False), ('is_admin', False)), _connector='OR'), name='check_active_for_staff_admin')],
            },
        ),
    ]
